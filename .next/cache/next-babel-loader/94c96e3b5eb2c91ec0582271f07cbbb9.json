{"ast":null,"code":"var _jsxFileName = \"/Users/nitbhatn0/Desktop/XT React Case study/xt-react-assignment/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { getCharacters } from '../services/character';\nimport { getStore } from '../redux/store';\nimport withRedux from \"next-redux-wrapper\";\nimport { setCharactersFiltersAction } from '../redux/actions/filters';\nimport { connect } from 'react-redux'; // components\n\nimport Search from '../components/Search';\nimport Sorting from '../components/Sorting';\nimport CharacterList from '../components/CharacterList/CharacterList';\nimport Pagination from '../components/Pagination/Pagination';\nimport CharacterFiltersConnect from '../components/CharacterFilters/CharacterFilters.connect';\nimport CharacterFiltersAppliedConnect from '../components/CharacterFiltersApplied/CharacterFiltersApplied.connect';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: props.characters || [],\n      pagination: props.pagination || null,\n      page: 1,\n      filters: {}\n    };\n    this.fetchCharacters = this.fetchCharacters.bind(this);\n    this.paginateCharacters = this.paginateCharacters.bind(this);\n    this.filterCharacters = this.filterCharacters.bind(this);\n    this.searchCharacters = this.searchCharacters.bind(this);\n    this.onAppliedFilterRemove = this.onAppliedFilterRemove.bind(this);\n  }\n\n  static async getInitialProps(context) {\n    return getCharacters().then(res => {\n      context.store.dispatch(setCharactersFiltersAction(res.data.results));\n      return {\n        characters: res.data.results,\n        pagination: res.data.info\n      };\n    }).catch(err => {\n      console.error('ERROR', err);\n      return {\n        characters: [],\n        pagination: null\n      };\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.filtersApplied !== this.props.filtersApplied) {\n      this.fetchCharacters();\n    }\n  }\n\n  fetchCharacters() {\n    getCharacters({\n      searchText: this.state.searchText || '',\n      species: this.props.filtersApplied.species || [],\n      gender: this.props.filtersApplied.gender || [],\n      status: this.props.filtersApplied.status || [],\n      page: this.state.page || 1\n    }).then(res => {\n      this.setState({\n        characters: res.data.results,\n        pagination: res.data.info\n      });\n    }).catch(err => {\n      return {\n        characters: [],\n        pagination: null\n      };\n    });\n  }\n\n  paginateCharacters(page) {\n    this.setState({\n      page\n    }, () => this.fetchCharacters());\n  }\n\n  filterCharacters(filters) {\n    const filtersApplied = _objectSpread({}, this.state.filters, {}, filters);\n\n    this.props.setFiltersApplied(filtersApplied);\n  }\n\n  searchCharacters(searchText) {\n    this.setState({\n      searchText,\n      page: 1\n    }, () => this.fetchCharacters());\n  }\n\n  onAppliedFilterRemove(filterCategory, removedFilter) {\n    const filters = _objectSpread({}, this.props.filtersApplied, {\n      [filterCategory]: this.props.filtersApplied[filterCategory].filter(filter => filter !== removedFilter)\n    });\n\n    this.props.setFiltersApplied(filters);\n  }\n\n  render() {\n    return __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      lg: \"2\",\n      className: \"float-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, __jsx(CharacterFiltersConnect, {\n      onFilterChange: this.filterCharacters,\n      filtersApplied: this.props.filtersApplied,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    })), __jsx(Col, {\n      lg: \"8\",\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, __jsx(CharacterFiltersAppliedConnect, {\n      filters: this.state.filters,\n      onAppliedFilterRemove: this.onAppliedFilterRemove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }), __jsx(Search, {\n      onSearch: this.searchCharacters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }), __jsx(Sorting, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }), __jsx(CharacterList, {\n      characters: this.state.characters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }), __jsx(Pagination, {\n      pagination: this.state.pagination,\n      onPaginate: this.paginateCharacters,\n      page: this.state.page,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    filters: state.filters,\n    filtersApplied: state.filtersApplied\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setFiltersApplied: filtersApplied => {\n      dispatch({\n        type: 'SET_FILTERS_APPLIED',\n        payload: filtersApplied\n      });\n    }\n  };\n}\n\nconst HomeConnect = connect(mapStateToProps, mapDispatchToProps)(Home);\nHomeConnect.getInitialProps = Home.getInitialProps;\nexport default HomeConnect;","map":{"version":3,"sources":["/Users/nitbhatn0/Desktop/XT React Case study/xt-react-assignment/pages/index.js"],"names":["React","Fragment","Row","Col","getCharacters","getStore","withRedux","setCharactersFiltersAction","connect","Search","Sorting","CharacterList","Pagination","CharacterFiltersConnect","CharacterFiltersAppliedConnect","Home","Component","constructor","props","state","characters","pagination","page","filters","fetchCharacters","bind","paginateCharacters","filterCharacters","searchCharacters","onAppliedFilterRemove","getInitialProps","context","then","res","store","dispatch","data","results","info","catch","err","console","error","componentDidUpdate","prevProps","filtersApplied","searchText","species","gender","status","setState","setFiltersApplied","filterCategory","removedFilter","filter","render","mapStateToProps","mapDispatchToProps","type","payload","HomeConnect"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport {getCharacters} from '../services/character';\nimport { getStore } from '../redux/store';\nimport withRedux from \"next-redux-wrapper\";\nimport { setCharactersFiltersAction } from '../redux/actions/filters' \nimport {connect} from 'react-redux';\n\n// components\nimport Search from '../components/Search';\nimport Sorting from '../components/Sorting';\nimport CharacterList from '../components/CharacterList/CharacterList';\nimport Pagination from '../components/Pagination/Pagination';\nimport CharacterFiltersConnect from '../components/CharacterFilters/CharacterFilters.connect';\nimport CharacterFiltersAppliedConnect from '../components/CharacterFiltersApplied/CharacterFiltersApplied.connect';\n\nclass Home extends React.Component {\n\n    constructor (props) {\n        super (props);\n        this.state = {\n            characters: props.characters || [],\n            pagination: props.pagination || null,\n            page: 1,\n            filters: {}\n        };\n\n        this.fetchCharacters = this.fetchCharacters.bind(this);\n        this.paginateCharacters = this.paginateCharacters.bind(this);\n        this.filterCharacters = this.filterCharacters.bind(this);\n        this.searchCharacters = this.searchCharacters.bind(this);\n        this.onAppliedFilterRemove = this.onAppliedFilterRemove.bind(this);\n    }\n\n    static async getInitialProps (context) {\n        return getCharacters().then(res => {\n            context.store.dispatch(setCharactersFiltersAction(res.data.results))\n            return {\n                characters: res.data.results,\n                pagination: res.data.info\n            };\n        }).catch(err => {\n            console.error('ERROR', err)\n            return {\n                characters: [],\n                pagination: null\n            };\n        });\n    }\n\n    componentDidUpdate (prevProps) {\n        if (prevProps.filtersApplied !== this.props.filtersApplied) {\n            this.fetchCharacters();\n        }\n    }\n\n    fetchCharacters() {\n        getCharacters({\n            searchText: this.state.searchText || '',\n            species: this.props.filtersApplied.species || [],\n            gender: this.props.filtersApplied.gender || [],\n            status: this.props.filtersApplied.status || [],\n            page: this.state.page || 1\n        }).then(res => {\n            this.setState({\n                characters: res.data.results,\n                pagination: res.data.info\n            });\n        }).catch(err => {\n            return {\n                characters: [],\n                pagination: null\n            };\n        });\n    }\n\n    paginateCharacters(page) {\n        this.setState({\n            page\n        }, () => this.fetchCharacters());\n    }\n\n    filterCharacters(filters) {\n        const  filtersApplied = {\n            ...this.state.filters,\n            ...filters\n        };\n\n        this.props.setFiltersApplied(\n            filtersApplied\n        )\n    }\n\n    searchCharacters(searchText) {\n        this.setState({\n            searchText,\n            page: 1\n        }, () => this.fetchCharacters());\n    }\n\n    onAppliedFilterRemove(filterCategory, removedFilter) {\n        const filters = {\n            ...this.props.filtersApplied,\n            [filterCategory]: this.props.filtersApplied[filterCategory].filter(filter => filter !== removedFilter)\n        };\n\n        this.props.setFiltersApplied(\n            filters\n        )\n    }\n\n    render () {\n        return (\n            <Row>\n                <Col lg=\"2\" className=\"float-left\">\n                    <CharacterFiltersConnect\n                        onFilterChange={this.filterCharacters}\n                        filtersApplied={this.props.filtersApplied}\n                    />\n                </Col>\n                <Col lg=\"8\" className=\"float-right\">\n                    <CharacterFiltersAppliedConnect filters={this.state.filters} onAppliedFilterRemove={this.onAppliedFilterRemove} />\n                    <Search onSearch={this.searchCharacters} />\n                    <Sorting />\n                    <CharacterList characters={this.state.characters} />\n                    <Pagination pagination={this.state.pagination} onPaginate={this.paginateCharacters} page={this.state.page} />\n                </Col>\n            </Row>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        filters: state.filters,\n        filtersApplied: state.filtersApplied\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setFiltersApplied: (filtersApplied) => {\n            dispatch({ type: 'SET_FILTERS_APPLIED', payload: filtersApplied })\n        }\n    }\n}\n\nconst HomeConnect = connect(mapStateToProps, mapDispatchToProps)(Home);\n\nHomeConnect.getInitialProps = Home.getInitialProps;\n\nexport default HomeConnect;"]},"metadata":{},"sourceType":"module"}