{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/nitbhatn0/Desktop/XT React Case study/xt-react-assignment/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Fragment } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { getCharacters } from '../services/character';\nimport { getStore } from '../redux/store';\nimport withRedux from \"next-redux-wrapper\";\nimport { setCharactersFiltersAction } from '../redux/actions/filters';\nimport { connect } from 'react-redux'; // components\n\nimport Search from '../components/Search';\nimport Sorting from '../components/Sorting';\nimport CharacterList from '../components/CharacterList/CharacterList';\nimport Pagination from '../components/Pagination/Pagination';\nimport CharacterFiltersConnect from '../components/CharacterFilters/CharacterFilters.connect';\nimport CharacterFiltersAppliedConnect from '../components/CharacterFiltersApplied/CharacterFiltersApplied.connect';\n\nvar Home = /*#__PURE__*/function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      characters: props.characters || [],\n      pagination: props.pagination || null,\n      page: 1,\n      filters: {}\n    };\n    _this.fetchCharacters = _this.fetchCharacters.bind(_assertThisInitialized(_this));\n    _this.paginateCharacters = _this.paginateCharacters.bind(_assertThisInitialized(_this));\n    _this.filterCharacters = _this.filterCharacters.bind(_assertThisInitialized(_this));\n    _this.searchCharacters = _this.searchCharacters.bind(_assertThisInitialized(_this));\n    _this.onAppliedFilterRemove = _this.onAppliedFilterRemove.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.filtersApplied !== this.props.filtersApplied) {\n        this.fetchCharacters();\n      }\n    }\n  }, {\n    key: \"fetchCharacters\",\n    value: function fetchCharacters() {\n      var _this2 = this;\n\n      getCharacters({\n        searchText: this.state.searchText || '',\n        species: this.props.filtersApplied.species || [],\n        gender: this.props.filtersApplied.gender || [],\n        status: this.props.filtersApplied.status || [],\n        page: this.state.page || 1\n      }).then(function (res) {\n        _this2.setState({\n          characters: res.data.results,\n          pagination: res.data.info\n        });\n      })[\"catch\"](function (err) {\n        return {\n          characters: [],\n          pagination: null\n        };\n      });\n    }\n  }, {\n    key: \"paginateCharacters\",\n    value: function paginateCharacters(page) {\n      var _this3 = this;\n\n      this.setState({\n        page: page\n      }, function () {\n        return _this3.fetchCharacters();\n      });\n    }\n  }, {\n    key: \"filterCharacters\",\n    value: function filterCharacters(filters) {\n      var filtersApplied = _objectSpread({}, this.state.filters, {}, filters);\n\n      this.props.setFiltersApplied(filtersApplied);\n    }\n  }, {\n    key: \"searchCharacters\",\n    value: function searchCharacters(searchText) {\n      var _this4 = this;\n\n      this.setState({\n        searchText: searchText,\n        page: 1\n      }, function () {\n        return _this4.fetchCharacters();\n      });\n    }\n  }, {\n    key: \"onAppliedFilterRemove\",\n    value: function onAppliedFilterRemove(filterCategory, removedFilter) {\n      var filters = _objectSpread({}, this.props.filtersApplied, _defineProperty({}, filterCategory, this.props.filtersApplied[filterCategory].filter(function (filter) {\n        return filter !== removedFilter;\n      })));\n\n      this.props.setFiltersApplied(filters);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, __jsx(Col, {\n        lg: \"2\",\n        className: \"float-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, __jsx(CharacterFiltersConnect, {\n        onFilterChange: this.filterCharacters,\n        filtersApplied: this.props.filtersApplied,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      })), __jsx(Col, {\n        lg: \"8\",\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, __jsx(CharacterFiltersAppliedConnect, {\n        filters: this.state.filters,\n        onAppliedFilterRemove: this.onAppliedFilterRemove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }), __jsx(Search, {\n        onSearch: this.searchCharacters,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }), __jsx(Sorting, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }), __jsx(CharacterList, {\n        characters: this.state.characters,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }), __jsx(Pagination, {\n        pagination: this.state.pagination,\n        onPaginate: this.paginateCharacters,\n        page: this.state.page,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(context) {\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", getCharacters().then(function (res) {\n                context.store.dispatch(setCharactersFiltersAction(res.data.results));\n                return {\n                  characters: res.data.results,\n                  pagination: res.data.info\n                };\n              })[\"catch\"](function (err) {\n                console.error('ERROR', err);\n                return {\n                  characters: [],\n                  pagination: null\n                };\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    filters: state.filters,\n    filtersApplied: state.filtersApplied\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setFiltersApplied: function setFiltersApplied(filtersApplied) {\n      dispatch({\n        type: 'SET_FILTERS_APPLIED',\n        payload: filtersApplied\n      });\n    }\n  };\n}\n\nvar HomeConnect = connect(mapStateToProps, mapDispatchToProps)(Home);\nHomeConnect.getInitialProps = Home.getInitialProps;\nexport default HomeConnect;","map":{"version":3,"sources":["/Users/nitbhatn0/Desktop/XT React Case study/xt-react-assignment/pages/index.js"],"names":["React","Fragment","Row","Col","getCharacters","getStore","withRedux","setCharactersFiltersAction","connect","Search","Sorting","CharacterList","Pagination","CharacterFiltersConnect","CharacterFiltersAppliedConnect","Home","props","state","characters","pagination","page","filters","fetchCharacters","bind","paginateCharacters","filterCharacters","searchCharacters","onAppliedFilterRemove","prevProps","filtersApplied","searchText","species","gender","status","then","res","setState","data","results","info","err","setFiltersApplied","filterCategory","removedFilter","filter","context","store","dispatch","console","error","Component","mapStateToProps","mapDispatchToProps","type","payload","HomeConnect","getInitialProps"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport {getCharacters} from '../services/character';\nimport { getStore } from '../redux/store';\nimport withRedux from \"next-redux-wrapper\";\nimport { setCharactersFiltersAction } from '../redux/actions/filters' \nimport {connect} from 'react-redux';\n\n// components\nimport Search from '../components/Search';\nimport Sorting from '../components/Sorting';\nimport CharacterList from '../components/CharacterList/CharacterList';\nimport Pagination from '../components/Pagination/Pagination';\nimport CharacterFiltersConnect from '../components/CharacterFilters/CharacterFilters.connect';\nimport CharacterFiltersAppliedConnect from '../components/CharacterFiltersApplied/CharacterFiltersApplied.connect';\n\nclass Home extends React.Component {\n\n    constructor (props) {\n        super (props);\n        this.state = {\n            characters: props.characters || [],\n            pagination: props.pagination || null,\n            page: 1,\n            filters: {}\n        };\n\n        this.fetchCharacters = this.fetchCharacters.bind(this);\n        this.paginateCharacters = this.paginateCharacters.bind(this);\n        this.filterCharacters = this.filterCharacters.bind(this);\n        this.searchCharacters = this.searchCharacters.bind(this);\n        this.onAppliedFilterRemove = this.onAppliedFilterRemove.bind(this);\n    }\n\n    static async getInitialProps (context) {\n        return getCharacters().then(res => {\n            context.store.dispatch(setCharactersFiltersAction(res.data.results))\n            return {\n                characters: res.data.results,\n                pagination: res.data.info\n            };\n        }).catch(err => {\n            console.error('ERROR', err)\n            return {\n                characters: [],\n                pagination: null\n            };\n        });\n    }\n\n    componentDidUpdate (prevProps) {\n        if (prevProps.filtersApplied !== this.props.filtersApplied) {\n            this.fetchCharacters();\n        }\n    }\n\n    fetchCharacters() {\n        getCharacters({\n            searchText: this.state.searchText || '',\n            species: this.props.filtersApplied.species || [],\n            gender: this.props.filtersApplied.gender || [],\n            status: this.props.filtersApplied.status || [],\n            page: this.state.page || 1\n        }).then(res => {\n            this.setState({\n                characters: res.data.results,\n                pagination: res.data.info\n            });\n        }).catch(err => {\n            return {\n                characters: [],\n                pagination: null\n            };\n        });\n    }\n\n    paginateCharacters(page) {\n        this.setState({\n            page\n        }, () => this.fetchCharacters());\n    }\n\n    filterCharacters(filters) {\n        const  filtersApplied = {\n            ...this.state.filters,\n            ...filters\n        };\n\n        this.props.setFiltersApplied(\n            filtersApplied\n        )\n    }\n\n    searchCharacters(searchText) {\n        this.setState({\n            searchText,\n            page: 1\n        }, () => this.fetchCharacters());\n    }\n\n    onAppliedFilterRemove(filterCategory, removedFilter) {\n        const filters = {\n            ...this.props.filtersApplied,\n            [filterCategory]: this.props.filtersApplied[filterCategory].filter(filter => filter !== removedFilter)\n        };\n\n        this.props.setFiltersApplied(\n            filters\n        )\n    }\n\n    render () {\n        return (\n            <Row>\n                <Col lg=\"2\" className=\"float-left\">\n                    <CharacterFiltersConnect\n                        onFilterChange={this.filterCharacters}\n                        filtersApplied={this.props.filtersApplied}\n                    />\n                </Col>\n                <Col lg=\"8\" className=\"float-right\">\n                    <CharacterFiltersAppliedConnect filters={this.state.filters} onAppliedFilterRemove={this.onAppliedFilterRemove} />\n                    <Search onSearch={this.searchCharacters} />\n                    <Sorting />\n                    <CharacterList characters={this.state.characters} />\n                    <Pagination pagination={this.state.pagination} onPaginate={this.paginateCharacters} page={this.state.page} />\n                </Col>\n            </Row>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        filters: state.filters,\n        filtersApplied: state.filtersApplied\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setFiltersApplied: (filtersApplied) => {\n            dispatch({ type: 'SET_FILTERS_APPLIED', payload: filtersApplied })\n        }\n    }\n}\n\nconst HomeConnect = connect(mapStateToProps, mapDispatchToProps)(Home);\n\nHomeConnect.getInitialProps = Home.getInitialProps;\n\nexport default HomeConnect;"]},"metadata":{},"sourceType":"module"}