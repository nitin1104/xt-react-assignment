{"ast":null,"code":"var _jsxFileName = \"/Users/nitbhatn0/Desktop/XT React Case study/xt-react-assignment/components/CharacterFilters/CharacterFilters.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Filters from '../Filters/Filters';\nvar filtersData = {\n  \"species\": {\n    \"label\": \"Species\",\n    \"data\": [\"Human\", \"Mythology\", \"Other\"]\n  }\n};\nexport default function CharacterFilters(props) {\n  var filters = props.filters;\n\n  function onSpeciesFilterChange(filters) {\n    props.onFilterChange && props.onFilterChange({\n      species: filters\n    });\n  }\n\n  function onGenderFilterChange(filters) {\n    props.onFilterChange && props.onFilterChange({\n      gender: filters\n    });\n  }\n\n  function onStatusFilterChange(filters) {\n    props.onFilterChange && props.onFilterChange({\n      status: filters\n    });\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, filters.species.length > 0 && __jsx(Filters, {\n    label: \"Species\",\n    filters: filters.species,\n    onFilterChange: onSpeciesFilterChange,\n    selectedFilters: props.filtersApplied.species,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), filters.gender.length > 0 && __jsx(Filters, {\n    label: \"Gender\",\n    filters: filters.gender,\n    onFilterChange: onGenderFilterChange,\n    selectedFilters: props.filtersApplied.gender,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), filters.status.length > 0 && __jsx(Filters, {\n    label: \"Status\",\n    filters: filters.status,\n    onFilterChange: onStatusFilterChange,\n    selectedFilters: props.filtersApplied.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/nitbhatn0/Desktop/XT React Case study/xt-react-assignment/components/CharacterFilters/CharacterFilters.js"],"names":["React","useEffect","useState","Filters","filtersData","CharacterFilters","props","filters","onSpeciesFilterChange","onFilterChange","species","onGenderFilterChange","gender","onStatusFilterChange","status","length","filtersApplied"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,IAAMC,WAAW,GAAG;AAChB,aAAW;AACP,aAAS,SADF;AAEP,YAAQ,CACJ,OADI,EAEJ,WAFI,EAGJ,OAHI;AAFD;AADK,CAApB;AAWA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC5C,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;;AAEA,WAASC,qBAAT,CAA+BD,OAA/B,EAAwC;AACpCD,IAAAA,KAAK,CAACG,cAAN,IAAwBH,KAAK,CAACG,cAAN,CAAqB;AACzCC,MAAAA,OAAO,EAAEH;AADgC,KAArB,CAAxB;AAGH;;AAED,WAASI,oBAAT,CAA8BJ,OAA9B,EAAuC;AACnCD,IAAAA,KAAK,CAACG,cAAN,IAAwBH,KAAK,CAACG,cAAN,CAAqB;AACzCG,MAAAA,MAAM,EAAEL;AADiC,KAArB,CAAxB;AAGH;;AAED,WAASM,oBAAT,CAA8BN,OAA9B,EAAuC;AACnCD,IAAAA,KAAK,CAACG,cAAN,IAAwBH,KAAK,CAACG,cAAN,CAAqB;AACzCK,MAAAA,MAAM,EAAEP;AADiC,KAArB,CAAxB;AAGH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,OAAO,CAACG,OAAR,CAAgBK,MAAhB,GAAyB,CAAzB,IAEA,MAAC,OAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,OAAO,EAAER,OAAO,CAACG,OAFrB;AAGI,IAAA,cAAc,EAAEF,qBAHpB;AAII,IAAA,eAAe,EAAEF,KAAK,CAACU,cAAN,CAAqBN,OAJ1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,EAYQH,OAAO,CAACK,MAAR,CAAeG,MAAf,GAAwB,CAAxB,IAEA,MAAC,OAAD;AACI,IAAA,KAAK,EAAC,QADV;AAEI,IAAA,OAAO,EAAER,OAAO,CAACK,MAFrB;AAGI,IAAA,cAAc,EAAED,oBAHpB;AAII,IAAA,eAAe,EAAEL,KAAK,CAACU,cAAN,CAAqBJ,MAJ1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdR,EAsBQL,OAAO,CAACO,MAAR,CAAeC,MAAf,GAAwB,CAAxB,IAEA,MAAC,OAAD;AACI,IAAA,KAAK,EAAC,QADV;AAEI,IAAA,OAAO,EAAER,OAAO,CAACO,MAFrB;AAGI,IAAA,cAAc,EAAED,oBAHpB;AAII,IAAA,eAAe,EAAEP,KAAK,CAACU,cAAN,CAAqBF,MAJ1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBR,CADJ;AAkCH","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Filters from '../Filters/Filters';\n\nconst filtersData = {\n    \"species\": {\n        \"label\": \"Species\",\n        \"data\": [\n            \"Human\",\n            \"Mythology\",\n            \"Other\"\n        ]\n    },\n};\n\nexport default function CharacterFilters(props) {\n    const filters = props.filters;\n\n    function onSpeciesFilterChange(filters) {\n        props.onFilterChange && props.onFilterChange({\n            species: filters,\n        });\n    }\n\n    function onGenderFilterChange(filters) {\n        props.onFilterChange && props.onFilterChange({\n            gender: filters\n        });\n    }\n\n    function onStatusFilterChange(filters) {\n        props.onFilterChange && props.onFilterChange({\n            status: filters\n        });\n    }\n    \n    return (\n        <div>\n            {\n                filters.species.length > 0\n                &&\n                <Filters\n                    label=\"Species\"\n                    filters={filters.species}\n                    onFilterChange={onSpeciesFilterChange}\n                    selectedFilters={props.filtersApplied.species}\n                />\n            }\n            {\n                filters.gender.length > 0\n                &&\n                <Filters\n                    label=\"Gender\"\n                    filters={filters.gender}\n                    onFilterChange={onGenderFilterChange}\n                    selectedFilters={props.filtersApplied.gender}\n                />\n            }\n            {\n                filters.status.length > 0\n                &&\n                <Filters\n                    label=\"Status\"\n                    filters={filters.status}\n                    onFilterChange={onStatusFilterChange}\n                    selectedFilters={props.filtersApplied.status}\n                />\n            }\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}